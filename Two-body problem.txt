e=0.7; m1=1; m2=4;
T=2*pi./(1-e).^1.5; tspan=linspace(0,T,1000);
options=odeset('RelTol',1.e-6);
x0 = -1; u0 = 0; y0 = 0; v0 = sqrt(1+e);
%%%%% Solve differential equations for x and y using ode45 with arguments tspan and options.
[t,sol] = ode45(@(t,sol) equation(sol), tspan, [x0; u0; y0; v0], options);
%%%%% Determine x1, y1 and x2, y2
m1m2 = m1 + m2;
temp1 = m2/m1m2;
temp2 = -m1/m1m2;
x1 = sol(:,1) * temp1; % CORRECT
x2 = sol(:,1) * temp2;
y1 = sol(:,3) * temp1; % CORRECT
y2 = sol(:,3) * temp2;
%%%%% graphics: UNCOMMENT TO RUN ON MATLAB ONLINE OR DESKTOP %%%%%%%%%%%%%%
% k=0.1;
% R1=k*(m1)^(1/3); R2=k*(m2)^(1/3); %radius of masses
% theta = linspace(0,2*pi); 
% figure; axis equal; hold on; set(gcf,'color','w');
% axis off; 
% xlim([-2,5]); ylim([-2.5,2.5]);
% planet=fill(R1*cos(theta)+x1(1), R1*sin(theta)+y1(1),'b'); 
% sun=fill(R2*cos(theta)+x2(1), R2*sin(theta)+y2(1),'r'); 
% pause(1);
% nperiods=5; %number of periods to plot
% for j=1:nperiods
%     for i=1:length(t)
%         planet.XData=R1*cos(theta)+x1(i); planet.YData=R1*sin(theta)+y1(i); 
%         sun.XData=R2*cos(theta)+x2(i); sun.YData=R2*sin(theta)+y2(i); 
%         drawnow;
%     end
% end
%%%%% Write local function for differential equations %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function dxdt = equation(xuyv)
    x = xuyv(1);
    u = xuyv(2);
    y = xuyv(3);
    v = xuyv(4);
    temp = (x.^2 + y.^2).^(3/2);
    dxdt = [u; -x./temp; v; -y./temp];
end